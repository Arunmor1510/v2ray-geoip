name: Build geoip files
on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * 4"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Set variables
        run: |
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
        shell: bash

      - name: mkdir
        run: |
          mkdir premerge
          mkdir postmerge

      - name: Fetch lists from ripe.net
        run: |
          chmod +x asn.sh
        #  ./asn.sh

      - name: Append more CIDRs
        run: |
          curl -sSL https://www.gstatic.com/ipranges/goog.json | jq --raw-output '.prefixes[].ipv4Prefix,.prefixes[].ipv6Prefix | select(. != null)' >> premerge/google.txt
          curl -sSL https://www.gstatic.com/ipranges/cloud.json | jq --raw-output '.prefixes[].ipv4Prefix,.prefixes[].ipv6Prefix | select(. != null)' >> premerge/google.txt
          curl -sSL https://api.fastly.com/public-ip-list | jq --raw-output '.addresses[],.ipv6_addresses[]' >> premerge/fastly.txt
          curl -sSL https://ip-ranges.amazonaws.com/ip-ranges.json | jq --raw-output '.prefixes[],.ipv6_prefixes[] | select(.service == "CLOUDFRONT") | .ip_prefix,.ipv6_prefix' | grep "/" >> premerge/cloudfront.txt

      - name: Build geoip files
        run: |
          go run ./ -c premerge.json

      - name: Merge CIDRs
        run: |
          cd ./premerge || exit 1
          go install -v github.com/zhanhb/cidr-merger@latest
          for name in `find . -type f -name "*.txt"`;do
            newname=`echo -n "${name}" | sed -e 's/ //g'`
            if [[ "$name" != "$newname" ]];then
              mv "${name}" "$newname"
            fi
            $(go env GOPATH)/bin/cidr-merger -o ../postmerge/${newname} "${newname}"
          done

      - name: Build geoip files
        run: |
          go run ./ -c postmerge.json

      - name: Convert sing-box geoip.db
        run: |
          cd ./output/dat || exit 1
          go install -v github.com/MetaCubeX/geo@latest
          $(go env GOPATH)/bin/geo convert -i v2ray -o sing -f v2ray-country-only-cn-private.dat sing-country-only-cn-private.dat
          

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          mv ./output/dat/*.dat ./publish/
          cp -fpPR ./output/text ./publish
          cp -fpPR ./output/srs ./publish

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add -A
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add geoip "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u geoip release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
